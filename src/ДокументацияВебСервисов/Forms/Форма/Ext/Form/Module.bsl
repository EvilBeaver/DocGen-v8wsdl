
//////////////////////////////////////////////////////////////////////
// Основные процедуры и функции

&НаСервере
Процедура ПолучитьРазметкуНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модуль        = РеквизитФормыВЗначение("Объект");
	ТекстРазметки = Модуль.ПолучитьРазметку(ВебСервис);
	
КонецПроцедуры

&НаСервере
Процедура ВизуализироватьMarkdownНаСервере()
	
	Разметка = ТекстРазметки.ПолучитьТекст();
	Если ПустаяСтрока(Разметка) Тогда
		ПолучитьРазметкуНаСервере();
	КонецЕсли;
	
	Модуль = РеквизитФормыВЗначение("Объект");
	Если ПустаяСтрока(Стиль) Тогда
		СтильДок = Модуль.ПолучитьМакет("СтильПоУмолчанию");
		Стиль = СтильДок.ПолучитьТекст();
	КонецЕсли;
	
	ФорматированныйДок = Модуль.ПолучитьФорматированныйДокумент(Разметка, Стиль);
	
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////
// Обработчики событий формы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбораВебСервисов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораВебСервисов()
	Элементы.ВебСервис.СписокВыбора.Очистить();
	
	Для Каждого МД Из Метаданные.WebСервисы Цикл
		Элементы.ВебСервис.СписокВыбора.Добавить(МД.Имя);
	КонецЦикла;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////
// Обработчики команд формы

&НаСервереБезКонтекста
Функция МодальностьРазрешена()

	Попытка
		РежимМодальности = Метаданные.РежимИспользованияМодальности;
	Исключение
		// старая версия, где нет такого свойства в метаданных
		Возврат Истина;
	КонецПопытки;

	Возврат РежимМодальности = Метаданные.СвойстваОбъектов.РежимИспользованияМодальности.Использовать;
	
КонецФункции // МодальностьРазрешена()


&НаКлиенте
Процедура ПолучитьРазметку(Команда)
	ПолучитьРазметкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВизуализироватьMarkdown(Команда)
	ВизуализироватьMarkdownНаСервере();
	ТД = Новый ТекстовыйДокумент;
	ТД.УстановитьТекст(ФорматированныйДок);
	Врем = ПолучитьИмяВременногоФайла(".html");

	Если МодальностьРазрешена() Тогда
		ТД.Записать(Врем);
		ЗапуститьПриложение(Врем);
	Иначе
		ОкончаниеЗаписи = Новый ОписаниеОповещения("ОкончаниеЗаписиФайлаДокументации", ЭтотОбъект, Врем);
		ТД.НачатьЗапись(ОкончаниеЗаписи, Врем);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеЗаписиФайлаДокументации(Результат, ИмяФайла) Экспорт
	
	// Веб-клиент не поддерживаем, Результат игнорируем.
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ВизуализироватьMarkdownЗавершение", ЭтаФорма), ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ВизуализироватьMarkdownЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт

КонецПроцедуры
